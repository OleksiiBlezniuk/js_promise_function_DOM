{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","newMessage","document","createElement","className","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAEjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAClCE,EAAkBF,UAAAA,OAAAA,EAChBD,2BAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GADnC,UAON,IAAMC,EAAe,SAACC,GAEdC,IAAAA,EAAaC,SAASC,cAAc,OAE1CF,EAAWG,UAAY,UACvBH,EAAWI,YAAcL,EAEzBE,SAASI,KAAKC,OAAON,IAGvBO,OAAOC,QAAU,CACflB,QAAAA,EACAQ,aAAAA","file":"main.b19ae75b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n// write your code here\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} on the elment:\n      ${element.nodeName}, id: ${element.id}.`\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n// write your code here\n  const newMessage = document.createElement('div');\n\n  newMessage.className = 'message';\n  newMessage.textContent = message;\n\n  document.body.append(newMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}